# Generated by Django 4.2.10 on 2024-03-19 10:45

from django.db import migrations


def create_tiktok_business_metrics(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    TempMetrics = apps.get_model("campaigns", "TempTiktokBusinessCampaign")

    Metrics = apps.get_model("metrics", "TiktokBusinessCampaignMetrics")
    instances = []
    for obj in TempMetrics.objects.using(db_alias).all():
        instances.append(
            Metrics(
                campaign_id=obj.identifier,
                date=obj.date,
                video_play_actions=obj.video_play_actions,
                video_watched_2s=obj.video_watched_2s,
                video_watched_6s=obj.video_watched_6s,
                video_views_p25=obj.video_views_p25,
                video_views_p50=obj.video_views_p50,
                video_views_p75=obj.video_views_p75,
                video_views_p100=obj.video_views_p100,
                cost_per_conversion=obj.cost_per_conversion,
                cpc=obj.cpc,
                ctr=obj.ctr,
                clicks=obj.clicks,
                spend=obj.spend,
                conversion=obj.conversion,
            )
        )
    Metrics.objects.using(db_alias).bulk_create(instances, ignore_conflicts=True)


def create_crossroads_metrics(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    TempMetrics = apps.get_model("campaigns", "TempCrossroadsCampaign")

    Metrics = apps.get_model("metrics", "CrossroadsCampaignMetrics")
    instances = []
    for obj in TempMetrics.objects.using(db_alias).all():
        instances.append(
            Metrics(
                campaign_id=obj.identifier,
                date=obj.date,
                revenue=obj.revenue,
                rpc=obj.rpc,
                rpv=obj.rpv,
                total_visitors=obj.total_visitors,
                filtered_visitors=obj.filtered_visitors,
                lander_visitors=obj.lander_visitors,
                lander_searches=obj.lander_searches,
                revenue_events=obj.revenue_events,
            )
        )
    Metrics.objects.using(db_alias).bulk_create(instances, ignore_conflicts=True)


class Migration(migrations.Migration):

    dependencies = [
        ("metrics", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_tiktok_business_metrics),
        migrations.RunPython(create_crossroads_metrics),
    ]
